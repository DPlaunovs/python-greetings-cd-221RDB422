name: Python Greetings CI/CD Pipeline
on:
  workflow_dispatch: {}  # Manual trigger of the pipeline

jobs:
  install-pip-deps:
    runs-on: [self-hosted, Windows]
    steps:
      - name: Checkout this pipeline repo
        uses: actions/checkout@v4  # lai piekļūtu .github/actions

      - name: Clone python-greetings repo
        uses: actions/checkout@v4
        with:
          repository: mtararujs/python-greetings
          path: python-greetings  # <- šī būs working-directory

      - name: Install pip deps
        uses: ./.github/actions/install-deps
        working-directory: python-greetings

  deploy-to-dev:
    # Job 2: Deploy service to dev environment
    needs: install-pip-deps  # depends on install-pip-deps job
    runs-on: [self-hosted, Windows]  # use self-hosted Windows runner
    steps:
      - name: Checkout pipeline repository
        uses: actions/checkout@v4
      - name: Deploy to Dev environment (port 7001)
        # Composite action clones service repo and restarts it via PM2
        uses: ./.github/actions/deploy-env
        with:
          env: dev
          port: 7001

  tests-on-dev:
    # Job 3: Run tests on dev environment
    needs: deploy-to-dev  # depends on deploy-to-dev job
    runs-on: [self-hosted, Windows]  # use self-hosted Windows runner
    steps:
      - name: Checkout pipeline repository
        uses: actions/checkout@v4
      - name: Test Dev environment (port 7001)
        # Composite action clones test repo and runs tests
        uses: ./.github/actions/test-env
        with:
          env: dev
          port: 7001

  deploy-to-staging:
    # Job 4: Deploy service to staging environment
    needs: tests-on-dev  # depends on tests-on-dev job
    runs-on: [self-hosted, Windows]  # use self-hosted Windows runner
    steps:
      - name: Checkout pipeline repository
        uses: actions/checkout@v4
      - name: Deploy to Staging environment (port 7002)
        # Composite action clones service repo and restarts it via PM2
        uses: ./.github/actions/deploy-env
        with:
          env: staging
          port: 7002

  tests-on-staging:
    # Job 5: Run tests on staging environment
    needs: deploy-to-staging  # depends on deploy-to-staging job
    runs-on: [self-hosted, Windows]  # use self-hosted Windows runner
    steps:
      - name: Checkout pipeline repository
        uses: actions/checkout@v4
      - name: Test Staging environment (port 7002)
        # Composite action clones test repo and runs tests
        uses: ./.github/actions/test-env
        with:
          env: staging
          port: 7002

  deploy-to-preprod:
    # Job 6: Deploy service to preprod environment
    needs: tests-on-staging  # depends on tests-on-staging job
    runs-on: [self-hosted, Windows]  # use self-hosted Windows runner
    steps:
      - name: Checkout pipeline repository
        uses: actions/checkout@v4
      - name: Deploy to Preprod environment (port 7003)
        # Composite action clones service repo and restarts it via PM2
        uses: ./.github/actions/deploy-env
        with:
          env: preprod
          port: 7003

  tests-on-preprod:
    # Job 7: Run tests on preprod environment
    needs: deploy-to-preprod  # depends on deploy-to-preprod job
    runs-on: [self-hosted, Windows]  # use self-hosted Windows runner
    steps:
      - name: Checkout pipeline repository
        uses: actions/checkout@v4
      - name: Test Preprod environment (port 7003)
        # Composite action clones test repo and runs tests
        uses: ./.github/actions/test-env
        with:
          env: preprod
          port: 7003

  deploy-to-prod:
    # Job 8: Deploy service to prod environment
    needs: tests-on-preprod  # depends on tests-on-preprod job
    runs-on: [self-hosted, Windows]  # use self-hosted Windows runner
    steps:
      - name: Checkout pipeline repository
        uses: actions/checkout@v4
      - name: Deploy to Prod environment (port 7004)
        # Composite action clones service repo and restarts it via PM2
        uses: ./.github/actions/deploy-env
        with:
          env: prod
          port: 7004

  tests-on-prod:
    # Job 9: Run tests on prod environment
    needs: deploy-to-prod  # depends on deploy-to-prod job
    runs-on: [self-hosted, Windows]  # use self-hosted Windows runner
    steps:
      - name: Checkout pipeline repository
        uses: actions/checkout@v4
      - name: Test Prod environment (port 7004)
        # Composite action clones test repo and runs tests
        uses: ./.github/actions/test-env
        with:
          env: prod
          port: 7004
