name: Python Greetings CI/CD Pipeline
on:
  workflow_dispatch:

jobs:
  install-pip-deps:
    runs-on: [self-hosted, Windows]
    steps:
      - name: Checkout pipeline repository
        uses: actions/checkout@v4

      - name: Clone python-greetings repo
        uses: actions/checkout@v4
        with:
          repository: mtararujs/python-greetings
          path: python-greetings

      - name: Install Python dependencies
        uses: ./.github/actions/install-deps

  deploy-to-dev:
    needs: install-pip-deps
    runs-on: [self-hosted, Windows]
    steps:
      - name: Kill PM2 app if running
        run: pm2 delete greetings-app-dev & EXIT /B 0
        shell: cmd

      - name: Kill lingering python.exe
        run: |
          $p = Get-Process python -ErrorAction SilentlyContinue
          if ($p) {
            Write-Output "Killing lingering python.exe..."
            Stop-Process -Id $p.Id -Force
            Start-Sleep -Seconds 5
          } else {
            Write-Output "No lingering python.exe found."
          }
        shell: powershell

      - name: Final wait before deletion
        run: Start-Sleep -Seconds 5
        shell: powershell

      - name: Force delete old directory
        run: Remove-Item -Path "python-greetings" -Recurse -Force -ErrorAction SilentlyContinue
        shell: powershell

      - name: Checkout pipeline repo
        uses: actions/checkout@v4

      - name: Clone python-greetings repo
        uses: actions/checkout@v4
        with:
          repository: mtararujs/python-greetings
          path: python-greetings

      - name: Deploy to Dev
        uses: ./.github/actions/deploy-env
        with:
          env: dev
          port: 7001

  tests-on-dev:
    needs: deploy-to-dev
    runs-on: [self-hosted, Windows]
    steps:
      - name: Checkout pipeline repo
        uses: actions/checkout@v4

      - name: Clone test framework
        uses: actions/checkout@v4
        with:
          repository: mtararujs/course-js-api-framework
          path: js-framework

      - name: Run tests on Dev
        uses: ./.github/actions/test-env
        with:
          env: dev

  deploy-to-staging:
    needs: tests-on-dev
    runs-on: [self-hosted, Windows]
    steps:
      - name: Kill PM2 app if running
        run: pm2 delete greetings-app-staging & EXIT /B 0
        shell: cmd

      - name: Kill lingering python.exe
        run: |
          $p = Get-Process python -ErrorAction SilentlyContinue
          if ($p) {
            Write-Output "Killing lingering python.exe..."
            Stop-Process -Id $p.Id -Force
            Start-Sleep -Seconds 5
          } else {
            Write-Output "No lingering python.exe found."
          }
        shell: powershell

      - name: Final wait before deletion
        run: Start-Sleep -Seconds 5
        shell: powershell

      - name: Force delete old directory
        run: Remove-Item -Path "python-greetings" -Recurse -Force -ErrorAction SilentlyContinue
        shell: powershell

      - name: Checkout pipeline repo
        uses: actions/checkout@v4

      - name: Clone python-greetings repo
        uses: actions/checkout@v4
        with:
          repository: mtararujs/python-greetings
          path: python-greetings

      - name: Deploy to Staging
        uses: ./.github/actions/deploy-env
        with:
          env: staging
          port: 7002

  tests-on-staging:
    needs: deploy-to-staging
    runs-on: [self-hosted, Windows]
    steps:
      - name: Checkout pipeline repo
        uses: actions/checkout@v4

      - name: Clone test framework
        uses: actions/checkout@v4
        with:
          repository: mtararujs/course-js-api-framework
          path: js-framework

      - name: Run tests on Staging
        uses: ./.github/actions/test-env
        with:
          env: staging

  deploy-to-preprod:
    needs: tests-on-staging
    runs-on: [self-hosted, Windows]
    steps:
      - name: Kill PM2 app if running
        run: pm2 delete greetings-app-preprod & EXIT /B 0
        shell: cmd

      - name: Kill lingering python.exe
        run: |
          $p = Get-Process python -ErrorAction SilentlyContinue
          if ($p) {
            Write-Output "Killing lingering python.exe..."
            Stop-Process -Id $p.Id -Force
            Start-Sleep -Seconds 5
          } else {
            Write-Output "No lingering python.exe found."
          }
        shell: powershell

      - name: Final wait before deletion
        run: Start-Sleep -Seconds 5
        shell: powershell

      - name: Force delete old directory
        run: Remove-Item -Path "python-greetings" -Recurse -Force -ErrorAction SilentlyContinue
        shell: powershell

      - name: Checkout pipeline repo
        uses: actions/checkout@v4

      - name: Clone python-greetings repo
        uses: actions/checkout@v4
        with:
          repository: mtararujs/python-greetings
          path: python-greetings

      - name: Deploy to Preprod
        uses: ./.github/actions/deploy-env
        with:
          env: preprod
          port: 7003

  tests-on-preprod:
    needs: deploy-to-preprod
    runs-on: [self-hosted, Windows]
    steps:
      - name: Checkout pipeline repo
        uses: actions/checkout@v4

      - name: Clone test framework
        uses: actions/checkout@v4
        with:
          repository: mtararujs/course-js-api-framework
          path: js-framework

      - name: Run tests on Preprod
        uses: ./.github/actions/test-env
        with:
          env: preprod

  deploy-to-prod:
    needs: tests-on-preprod
    runs-on: [self-hosted, Windows]
    steps:
      - name: Kill PM2 app if running
        run: pm2 delete greetings-app-prod & EXIT /B 0
        shell: cmd

      - name: Kill lingering python.exe
        run: |
          $p = Get-Process python -ErrorAction SilentlyContinue
          if ($p) {
            Write-Output "Killing lingering python.exe..."
            Stop-Process -Id $p.Id -Force
            Start-Sleep -Seconds 5
          } else {
            Write-Output "No lingering python.exe found."
          }
        shell: powershell

      - name: Final wait before deletion
        run: Start-Sleep -Seconds 5
        shell: powershell

      - name: Force delete old directory
        run: Remove-Item -Path "python-greetings" -Recurse -Force -ErrorAction SilentlyContinue
        shell: powershell

      - name: Checkout pipeline repo
        uses: actions/checkout@v4

      - name: Clone python-greetings repo
        uses: actions/checkout@v4
        with:
          repository: mtararujs/python-greetings
          path: python-greetings

      - name: Deploy to Prod
        uses: ./.github/actions/deploy-env
        with:
          env: prod
          port: 7004

  tests-on-prod:
    needs: deploy-to-prod
    runs-on: [self-hosted, Windows]
    steps:
      - name: Checkout pipeline repo
        uses: actions/checkout@v4

      - name: Clone test framework
        uses: actions/checkout@v4
        with:
          repository: mtararujs/course-js-api-framework
          path: js-framework

      - name: Run tests on Prod
        uses: ./.github/actions/test-env
        with:
          env: prod
