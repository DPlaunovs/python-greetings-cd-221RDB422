name: Python Greetings Pipeline
on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  install-pip-deps:
    runs-on: [self-hosted, Windows]
    steps:
      - name: Checkout pipeline repo
        uses: actions/checkout@v4
      - name: Checkout Python app repo
        uses: actions/checkout@v4
        with:
          repository: mtararujs/python-greetings
          path: python-greetings
      - name: Install Python dependencies
        uses: ./.github/actions/install-pip-deps
        with:
          repo-path: python-greetings

  deploy-to-dev:
    runs-on: [self-hosted, Windows]
    needs: install-pip-deps
    steps:
      - name: Checkout pipeline repo
        uses: actions/checkout@v4
      - name: Remove existing app folder (if any)
        run: if exist python-greetings rmdir /S /Q python-greetings
        shell: cmd
      - name: Checkout Python app repo
        uses: actions/checkout@v4
        with:
          repository: mtararujs/python-greetings
          path: python-greetings
      - name: Deploy to dev
        uses: ./.github/actions/deploy-app
        with:
          environment: dev
          port: '7001'
          repo-path: python-greetings

  tests-on-dev:
    runs-on: [self-hosted, Windows]
    needs: deploy-to-dev
    steps:
      - name: Checkout pipeline repo
        uses: actions/checkout@v4
      - name: Remove existing test framework (if any)
        run: if exist course-js-api-framework rmdir /S /Q course-js-api-framework
        shell: cmd
      - name: Checkout test framework repo
        uses: actions/checkout@v4
        with:
          repository: mtararujs/course-js-api-framework
          path: course-js-api-framework
      - name: Run tests on dev
        uses: ./.github/actions/test-app
        with:
          environment: dev
          repo-path: course-js-api-framework

  deploy-to-staging:
    runs-on: [self-hosted, Windows]
    needs: tests-on-dev
    steps:
      - name: Checkout pipeline repo
        uses: actions/checkout@v4
      - name: Remove existing app folder (if any)
        run: if exist python-greetings rmdir /S /Q python-greetings
        shell: cmd
      - name: Checkout Python app repo
        uses: actions/checkout@v4
        with:
          repository: mtararujs/python-greetings
          path: python-greetings
      - name: Deploy to staging
        uses: ./.github/actions/deploy-app
        with:
          environment: staging
          port: '7002'
          repo-path: python-greetings

  tests-on-staging:
    runs-on: [self-hosted, Windows]
    needs: deploy-to-staging
    steps:
      - name: Checkout pipeline repo
        uses: actions/checkout@v4
      - name: Remove existing test framework (if any)
        run: if exist course-js-api-framework rmdir /S /Q course-js-api-framework
        shell: cmd
      - name: Checkout test framework repo
        uses: actions/checkout@v4
        with:
          repository: mtararujs/course-js-api-framework
          path: course-js-api-framework
      - name: Run tests on staging
        uses: ./.github/actions/test-app
        with:
          environment: staging
          repo-path: course-js-api-framework

  deploy-to-preprod:
    runs-on: [self-hosted, Windows]
    needs: tests-on-staging
    steps:
      - name: Checkout pipeline repo
        uses: actions/checkout@v4
      - name: Remove existing app folder (if any)
        run: if exist python-greetings rmdir /S /Q python-greetings
        shell: cmd
      - name: Checkout Python app repo
        uses: actions/checkout@v4
        with:
          repository: mtararujs/python-greetings
          path: python-greetings
      - name: Deploy to preprod
        uses: ./.github/actions/deploy-app
        with:
          environment: preprod
          port: '7003'
          repo-path: python-greetings

  tests-on-preprod:
    runs-on: [self-hosted, Windows]
    needs: deploy-to-preprod
    steps:
      - name: Checkout pipeline repo
        uses: actions/checkout@v4
      - name: Remove existing test framework (if any)
        run: if exist course-js-api-framework rmdir /S /Q course-js-api-framework
        shell: cmd
      - name: Checkout test framework repo
        uses: actions/checkout@v4
        with:
          repository: mtararujs/course-js-api-framework
          path: course-js-api-framework
      - name: Run tests on preprod
        uses: ./.github/actions/test-app
        with:
          environment: preprod
          repo-path: course-js-api-framework

  deploy-to-prod:
    runs-on: [self-hosted, Windows]
    needs: tests-on-preprod
    steps:
      - name: Checkout pipeline repo
        uses: actions/checkout@v4
      - name: Remove existing app folder (if any)
        run: if exist python-greetings rmdir /S /Q python-greetings
        shell: cmd
      - name: Checkout Python app repo
        uses: actions/checkout@v4
        with:
          repository: mtararujs/python-greetings
          path: python-greetings
      - name: Deploy to prod
        uses: ./.github/actions/deploy-app
        with:
          environment: prod
          port: '7004'
          repo-path: python-greetings

  tests-on-prod:
    runs-on: [self-hosted, Windows]
    needs: deploy-to-prod
    steps:
      - name: Checkout pipeline repo
        uses: actions/checkout@v4
      - name: Remove existing test framework (if any)
        run: if exist course-js-api-framework rmdir /S /Q course-js-api-framework
        shell: cmd
      - name: Checkout test framework repo
        uses: actions/checkout@v4
        with:
          repository: mtararujs/course-js-api-framework
          path: course-js-api-framework
      - name: Run tests on prod
        uses: ./.github/actions/test-app
        with:
          environment: prod
          repo-path: course-js-api-framework
